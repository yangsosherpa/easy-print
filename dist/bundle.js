(()=>{var e={672:(e,o,s)=>{const n=s(860),r=s(185),t=s(508),i=n(),a=s(17),d=s(724),l=s(969),c=s(333),g=s(169);s(524),r.connect("mongodb://localhost:27017/easyprint",{useNewUrlParser:!0,useUnifiedTopology:!0}).then((()=>{console.log("Successfully connected to MongoDB")})).catch((e=>{console.error("Could not connect to MongoDB"),process.exit()}));const u=a.join(__dirname,"static");i.use(n.urlencoded({extended:!0})),i.use(n.static(u)),i.use(t({secret:"secret",resave:!1,saveUninitialized:!1})),i.set("view engine","ejs"),i.set("views",a.join(__dirname,"views")),i.use("/.netlify/functions",l),i.use("/auth",c),i.use("/vendor",g),d(i)},42:(e,o,s)=>{const n=s(344),r=s(45),t=s(432),i="secret";e.exports={verifyPassword:function(e,o,s){console.log("Function Name: verifyPassword");try{console.log(e.vendor);const n=e.vendor;if(!t.compareSync(e.body.password,n.password)){console.log("Password is not valid");const e={type:"error",message:"Invalid Password"};o.render("auth/login",e)}e.vendor.tokenObj={vendor:n,isValid:!0},s()}catch(e){console.log(e);const s={type:"error",message:"Invalid Password"};o.render("auth/login",s)}},verifyVendor:async function(e,o,s){console.log("Function Name: verifyVendor");const n=e.body.phoneNumber;if(e.body.password,!await r.exists({phoneNumber:n})){console.log("User does not exist");const e={type:"error",message:"User does not exist"};o.render("auth/login",e)}const t=await r.findOne({phoneNumber:n});e.vendor=t,s()},generateToken:async function(e,o,s){console.log("Function Name: generateToken");try{console.log(e.vendor.tokenObj);const r=e.vendor.tokenObj;if(!r.isValid){const e={type:"error",message:"Invalid Token"};o.render("auth/login",e)}const t={vendor:r.vendor},a=n.sign(t,i,{expiresIn:86400});e.vendor.token=a,s()}catch(e){console.log(e),o.render("auth/login",{type:"error",message:"Invalid Token"})}},isAuthenticated:function(e,o,s){console.log("Function Name: isAuthenticated");const r=e.session.token;if(console.log(r),r)try{const t=n.verify(r,i);if(console.log(t),t.vendor)e.session.isLoggedIn=!0,s();else{const e={type:"error",message:"Invalid Token"};o.render("/auth/login",e)}}catch(e){console.log(e);const s={type:"error",message:"Some Error Occured"};o.render("/auth/login",s)}else console.log("Token not found"),o.redirect("/auth/login")}}},134:e=>{e.exports=function(e,o,s){let n=e.originalUrl,r=e.method;console.log(`Method: ${r} | URL: ${n}`),s()}},799:(e,o,s)=>{const n=s(45);e.exports={passwordValidator:(e,o,s)=>{console.log("Function Name: passwordValidator");const n=e.body.password,r=e.body.confirmPassword;if(n.length<8){console.log("Password length is less than 8 characters");const e={type:"error",message:"Password length is less than 8 characters"};o.render("auth/register",e)}else if(n!==r){console.log("Passwords do not match");const e={type:"error",message:"Passwords do not match"};o.render("auth/register",e)}else s()},phoneNumberValidator:async(e,o,s)=>{const r=e.body.phoneNumber;if(await n.exists({phoneNumber:r})){const e={type:"error",message:"User already exists"};o.render("auth/register",e)}if(10!==r.toString().length){console.log("Invalid Phone Number");const e={type:"error",message:"Invalid Phone Number"};o.render("auth/register",e)}s()}}},424:(e,o,s)=>{const n=s(185),r=new(0,n.Schema)({files:[{originalname:{type:String,required:!0},filename:{type:String,required:!0},contentType:{type:String,requires:!0},data:{type:Buffer,required:!0}}],uploadedAt:{type:Date,default:Date.now},dropPoint:{type:String,default:"sjc"},status:{type:Boolean,default:!1,required:!0},isVerified:{type:Boolean,default:!1,required:!0}}),t=n.model("Order",r);e.exports=t},45:(e,o,s)=>{const n=s(185),r=s(432),t=n.Schema,i=new t({name:{type:String,required:!0},phoneNumber:{type:Number,required:!0,unique:!0},password:{type:String,required:!0},orders:[{name:{type:t.Types.ObjectId,ref:"Order",default:null}}]});i.pre("save",(function(e){const o=this;if(!o.isModified("password"))return e();r.genSalt(10,(function(s,n){if(s)return e();r.hash(o.password,n,(function(s,n){if(s)return e(s);o.password=n,e()}))}))}));const a=n.model("Vendor",i);e.exports=a},524:(e,o,s)=>{const n=s(185);n.Promise=global.Promise;const r={};r.mongoose=n,r.vendor=s(45),r.file=s(424),r.ROLES=["vendor","admin"],e.exports=r},333:(e,o,s)=>{const n=s(860).Router(),r=s(45),t=s(134),{verifyPassword:i,verifyVendor:a,generateToken:d}=s(42),{passwordValidator:l,phoneNumberValidator:c}=s(799);n.route("/register").get(t,((e,o)=>{console.log("Handler Function: Register Get"),o.render("auth/register",{type:null,message:null})})).post(t,c,l,(async(e,o)=>{console.log("Handler Function: Register Post");const s=e.body.phoneNumber,n=e.body.vendorName,t=e.body.password,i=new r({phoneNumber:s,name:n,password:t});i.save().then((()=>{console.log(`${i.name} saved to database`)})).catch((e=>{console.log(e)})),o.render("auth/login",{type:"success",message:"User created successfully! Login to Enter Dashboard."})})),n.route("/login").get(t,((e,o)=>{console.log("Handler Function: Login Get"),o.render("auth/login",{type:null,message:null})})).post(t,a,i,d,((e,o)=>{console.log("Handler Function: Login Post");try{const s=e.vendor.token;e.session.token=s,e.session.message="Login Successful",e.session.vendor=e.vendor,console.log(e.session),o.redirect(`/vendor/${e.vendor.name}`)}catch(e){console.log(e),o.sendStatus(500).send("Internal Server Error")}})),n.get("/logout",((e,o)=>{e.session.destroy(),console.log(e.session),o.redirect("/auth/login")})),e.exports=n},169:(e,o,s)=>{const n=s(860).Router(),r=(s(45),s(424)),t=s(134),{isAuthenticated:i}=s(42);n.route("/:vendorName").get(t,i,(async(e,o)=>{console.log("Function Name: Vendor Dashboard Get");const s=e.session.message,n=e.session.token,t=e.session.vendor,i=e.session?.isLoggedIn,a=await r.find({});console.log("allorders",a);let d={message:s,token:n,vendor:t,isLoggedIn:i,orders:a};console.log(d),o.render("dashboard",d)})),n.route("/order-detail").get(t,((e,o)=>{console.log("Function Name: Order Detail Get Handler"),o.render("orderDetail")})),e.exports=n},969:(e,o,s)=>{const n=s(860).Router(),r=s(45),t=s(424),i=s(738),a=s(17),d=s(147),l=i.diskStorage({destination:"uploads",filename:(e,o,s)=>{console.log("Saving file in storage"),s(null,`${o.fieldname}-${Date.now()}${a.extname(o.originalname)}`)}}),c=i({storage:l,limits:{fileSize:20971520}});n.get("/",((e,o)=>{if(console.log("View Handler Index"),console.log(e.session),e.session?.isLoggedIn){const s={isLoggedIn:!0,vendor:e.session.vendor};o.render("index",s)}else o.render("index",{isLoggedIn:!1})})),n.route("/print-form").get((async(e,o)=>{console.log("View Handler Print Form");const s=await r.find();if(e.session?.isLoggedIn){const n={isLoggedIn:!0,vendor:e.session.vendor,vendors:s};o.render("print-form",n)}else{const e={isLoggedIn:!1,vendors:s,msg:null,err:null};o.render("print-form",e)}})).post(c.array("files",5),(async(e,o)=>{console.log("View Handler Print Form Post");const s=await r.find(),n=e.body.droppoint,i=e.body.vendorid,a=e.files.map((e=>({originalname:e.originalname,filename:e.filename,contentType:e.mimetype,data:d.readFileSync(e.path)})));console.log(Array.isArray(a));const l=t({files:a,dropPoint:n});l.save();const c={isLoggedIn:!1,vendors:s,msg:"Files successfully uploaded",err:null},g=await r.findOne({_id:i});g.orders.push(l._id),g.save(),console.log(g.orders),console.log(c.msg),o.render("print-form",c)})),e.exports=n},432:e=>{"use strict";e.exports=require("bcryptjs")},860:e=>{"use strict";e.exports=require("express")},508:e=>{"use strict";e.exports=require("express-session")},344:e=>{"use strict";e.exports=require("jsonwebtoken")},185:e=>{"use strict";e.exports=require("mongoose")},738:e=>{"use strict";e.exports=require("multer")},724:e=>{"use strict";e.exports=require("serverless-http")},147:e=>{"use strict";e.exports=require("fs")},17:e=>{"use strict";e.exports=require("path")}},o={};!function s(n){var r=o[n];if(void 0!==r)return r.exports;var t=o[n]={exports:{}};return e[n](t,t.exports,s),t.exports}(672)})();